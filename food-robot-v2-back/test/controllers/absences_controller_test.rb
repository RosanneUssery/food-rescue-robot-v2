require "test_helper"

class AbsencesControllerTest < ActionDispatch::IntegrationTest
  setup do
    @absence = absences(:one)
  end

  test "should get index" do
    get absences_url, as: :json
    assert_response :success
  end

  test "should create absence" do
    assert_difference('Absence.count') do
      post absences_url, params: { absence: { AbsencesLog: @absence.AbsencesLog, Assignment: @absence.Assignment, CellCarrier: @absence.CellCarrier, FoodType: @absence.FoodType, Location: @absence.Location, Log: @absence.Log, LogPart: @absence.LogPart, LogRecipient: @absence.LogRecipient, LogVolunteer: @absence.LogVolunteer, Region: @absence.Region, ScaleType: @absence.ScaleType, Schedule: @absence.Schedule, ScheduleChain: @absence.ScheduleChain, SchedulePart: @absence.SchedulePart, ScheduleVolunteer: @absence.ScheduleVolunteer, TransportType: @absence.TransportType, Volunteer: @absence.Volunteer, absence_id: @absence.absence_id, active: @absence.active, address: @absence.address, admin: @absence.admin, admin_notes: @absence.admin_notes, assigned: @absence.assigned, authentication_token: @absence.authentication_token, backup: @absence.backup, cell_carrier_id: @absence.cell_carrier_id, comments: @absence.comments, complete: @absence.complete, contact: @absence.contact, count: @absence.count, covering: @absence.covering, current_sign_in_at: @absence.current_sign_in_at, current_sign_in_ip: @absence.current_sign_in_ip, day_of_week: @absence.day_of_week, description: @absence.description, detailed_date: @absence.detailed_date, detailed_hours_json: @absence.detailed_hours_json, detailed_start_time: @absence.detailed_start_time, detailed_stop_time: @absence.detailed_stop_time, difficulty_rating: @absence.difficulty_rating, donor_id: @absence.donor_id, donor_type: @absence.donor_type, email: @absence.email, encrypted_password: @absence.encrypted_password, entry_info: @absence.entry_info, equipment_storage_info: @absence.equipment_storage_info, exit_info: @absence.exit_info, expected_weight: @absence.expected_weight, flag_for_admin: @absence.flag_for_admin, food_storage_info: @absence.food_storage_info, food_type_id: @absence.food_type_id, format: @absence.format, frequency: @absence.frequency, generate: @absence.generate, get_sncs_email: @absence.get_sncs_email, handbook_url: @absence.handbook_url, has_car: @absence.has_car, hilliness: @absence.hilliness, hours: @absence.hours, hours_spent: @absence.hours_spent, irregular: @absence.irregular, is_disabled: @absence.is_disabled, last_sign_in_at: @absence.last_sign_in_at, last_sign_in_ip: @absence.last_sign_in_ip, lat: @absence.lat, lng: @absence.lng, location_id: @absence.location_id, location_type: @absence.location_type, log: @absence.log, log_id: @absence.log_id, logo_content_type: @absence.logo_content_type, logo_file_name: @absence.logo_file_name, logo_file_size: @absence.logo_file_size, logo_updated_at: @absence.logo_updated_at, name: @absence.name, notes: @absence.notes, num_reminders: @absence.num_reminders, num_volunteers: @absence.num_volunteers, on_email_list: @absence.on_email_list, onsite_contact_info: @absence.onsite_contact_info, phone: @absence.phone, photo_content_type: @absence.photo_content_type, photo_file_name: @absence.photo_file_name, photo_file_size: @absence.photo_file_size, photo_updated_at: @absence.photo_updated_at, pickup_prefs: @absence.pickup_prefs, position: @absence.position, post_pickup_emails: @absence.post_pickup_emails, pre_reminders_too: @absence.pre_reminders_too, preferred_contact: @absence.preferred_contact, prior_lbs_rescued: @absence.prior_lbs_rescued, prior_num_pickups: @absence.prior_num_pickups, public_notes: @absence.public_notes, receipt_key: @absence.receipt_key, recip_category: @absence.recip_category, recipient: @absence.recipient, region_id: @absence.region_id, remember_created_at: @absence.remember_created_at, requested_region_id: @absence.requested_region_id, required: @absence.required, reset_password_sent_at: @absence.reset_password_sent_at, reset_password_token: @absence.reset_password_token, scaffold: @absence.scaffold, scale_type_id: @absence.scale_type_id, schedule_chain: @absence.schedule_chain, schedule_chain_id: @absence.schedule_chain_id, schedule_id: @absence.schedule_id, sign_in_count: @absence.sign_in_count, sms_too: @absence.sms_too, splash_html: @absence.splash_html, start_date: @absence.start_date, stop_date: @absence.stop_date, tagline: @absence.tagline, tax_id: @absence.tax_id, temporary: @absence.temporary, time_zone: @absence.time_zone, title: @absence.title, transport_type_id: @absence.transport_type_id, twitter_handle: @absence.twitter_handle, twitter_key: @absence.twitter_key, twitter_last_poundage: @absence.twitter_last_poundage, twitter_last_timestamp: @absence.twitter_last_timestamp, twitter_secret: @absence.twitter_secret, twitter_token: @absence.twitter_token, twitter_token_secret: @absence.twitter_token_secret, unschedule_self: @absence.unschedule_self, volunteer_coordinator_email: @absence.volunteer_coordinator_email, volunteer_id: @absence.volunteer_id, waiver_signed: @absence.waiver_signed, waiver_signed_at: @absence.waiver_signed_at, website: @absence.website, weight: @absence.weight, weight_unit: @absence.weight_unit, welcome_email_text: @absence.welcome_email_text, when: @absence.when, why_zero: @absence.why_zero } }, as: :json
    end

    assert_response 201
  end

  test "should show absence" do
    get absence_url(@absence), as: :json
    assert_response :success
  end

  test "should update absence" do
    patch absence_url(@absence), params: { absence: { AbsencesLog: @absence.AbsencesLog, Assignment: @absence.Assignment, CellCarrier: @absence.CellCarrier, FoodType: @absence.FoodType, Location: @absence.Location, Log: @absence.Log, LogPart: @absence.LogPart, LogRecipient: @absence.LogRecipient, LogVolunteer: @absence.LogVolunteer, Region: @absence.Region, ScaleType: @absence.ScaleType, Schedule: @absence.Schedule, ScheduleChain: @absence.ScheduleChain, SchedulePart: @absence.SchedulePart, ScheduleVolunteer: @absence.ScheduleVolunteer, TransportType: @absence.TransportType, Volunteer: @absence.Volunteer, absence_id: @absence.absence_id, active: @absence.active, address: @absence.address, admin: @absence.admin, admin_notes: @absence.admin_notes, assigned: @absence.assigned, authentication_token: @absence.authentication_token, backup: @absence.backup, cell_carrier_id: @absence.cell_carrier_id, comments: @absence.comments, complete: @absence.complete, contact: @absence.contact, count: @absence.count, covering: @absence.covering, current_sign_in_at: @absence.current_sign_in_at, current_sign_in_ip: @absence.current_sign_in_ip, day_of_week: @absence.day_of_week, description: @absence.description, detailed_date: @absence.detailed_date, detailed_hours_json: @absence.detailed_hours_json, detailed_start_time: @absence.detailed_start_time, detailed_stop_time: @absence.detailed_stop_time, difficulty_rating: @absence.difficulty_rating, donor_id: @absence.donor_id, donor_type: @absence.donor_type, email: @absence.email, encrypted_password: @absence.encrypted_password, entry_info: @absence.entry_info, equipment_storage_info: @absence.equipment_storage_info, exit_info: @absence.exit_info, expected_weight: @absence.expected_weight, flag_for_admin: @absence.flag_for_admin, food_storage_info: @absence.food_storage_info, food_type_id: @absence.food_type_id, format: @absence.format, frequency: @absence.frequency, generate: @absence.generate, get_sncs_email: @absence.get_sncs_email, handbook_url: @absence.handbook_url, has_car: @absence.has_car, hilliness: @absence.hilliness, hours: @absence.hours, hours_spent: @absence.hours_spent, irregular: @absence.irregular, is_disabled: @absence.is_disabled, last_sign_in_at: @absence.last_sign_in_at, last_sign_in_ip: @absence.last_sign_in_ip, lat: @absence.lat, lng: @absence.lng, location_id: @absence.location_id, location_type: @absence.location_type, log: @absence.log, log_id: @absence.log_id, logo_content_type: @absence.logo_content_type, logo_file_name: @absence.logo_file_name, logo_file_size: @absence.logo_file_size, logo_updated_at: @absence.logo_updated_at, name: @absence.name, notes: @absence.notes, num_reminders: @absence.num_reminders, num_volunteers: @absence.num_volunteers, on_email_list: @absence.on_email_list, onsite_contact_info: @absence.onsite_contact_info, phone: @absence.phone, photo_content_type: @absence.photo_content_type, photo_file_name: @absence.photo_file_name, photo_file_size: @absence.photo_file_size, photo_updated_at: @absence.photo_updated_at, pickup_prefs: @absence.pickup_prefs, position: @absence.position, post_pickup_emails: @absence.post_pickup_emails, pre_reminders_too: @absence.pre_reminders_too, preferred_contact: @absence.preferred_contact, prior_lbs_rescued: @absence.prior_lbs_rescued, prior_num_pickups: @absence.prior_num_pickups, public_notes: @absence.public_notes, receipt_key: @absence.receipt_key, recip_category: @absence.recip_category, recipient: @absence.recipient, region_id: @absence.region_id, remember_created_at: @absence.remember_created_at, requested_region_id: @absence.requested_region_id, required: @absence.required, reset_password_sent_at: @absence.reset_password_sent_at, reset_password_token: @absence.reset_password_token, scaffold: @absence.scaffold, scale_type_id: @absence.scale_type_id, schedule_chain: @absence.schedule_chain, schedule_chain_id: @absence.schedule_chain_id, schedule_id: @absence.schedule_id, sign_in_count: @absence.sign_in_count, sms_too: @absence.sms_too, splash_html: @absence.splash_html, start_date: @absence.start_date, stop_date: @absence.stop_date, tagline: @absence.tagline, tax_id: @absence.tax_id, temporary: @absence.temporary, time_zone: @absence.time_zone, title: @absence.title, transport_type_id: @absence.transport_type_id, twitter_handle: @absence.twitter_handle, twitter_key: @absence.twitter_key, twitter_last_poundage: @absence.twitter_last_poundage, twitter_last_timestamp: @absence.twitter_last_timestamp, twitter_secret: @absence.twitter_secret, twitter_token: @absence.twitter_token, twitter_token_secret: @absence.twitter_token_secret, unschedule_self: @absence.unschedule_self, volunteer_coordinator_email: @absence.volunteer_coordinator_email, volunteer_id: @absence.volunteer_id, waiver_signed: @absence.waiver_signed, waiver_signed_at: @absence.waiver_signed_at, website: @absence.website, weight: @absence.weight, weight_unit: @absence.weight_unit, welcome_email_text: @absence.welcome_email_text, when: @absence.when, why_zero: @absence.why_zero } }, as: :json
    assert_response 200
  end

  test "should destroy absence" do
    assert_difference('Absence.count', -1) do
      delete absence_url(@absence), as: :json
    end

    assert_response 204
  end
end
